<?xml version="1.0" encoding="UTF-8"?>
<Defs>
  
  
  <ThingDef Name="ZF_MudstoneBase" ParentName="ZF_UglyRockBase">
    <defName>ZF_MudstoneBase</defName>
    <label>Mudstone</label>
    <description>An impassable mass of fine-grained sedimentary rock formed from hardened mud.</description>
    <graphicData>
      <color>(68,54,47)</color>
    </graphicData>
    <statBases>
      <MaxHitPoints>600</MaxHitPoints>
    </statBases>
    <building>
      <mineableThing>ZF_ChunkMudstone</mineableThing>
      <mineableDropChance>0.4</mineableDropChance>
    </building>
  </ThingDef>


  <ThingDef Name="ZF_WeatheredMudstone" ParentName="WeatheredRockBase" Class="Minerals2.ThingDef_StaticMineral">
    <defName>ZF_WeatheredMudstone</defName>
    <label>Weathered Mudstone</label>
    <description>An impassable mass of fine-grained sedimentary rock formed from hardened mud.</description>
    <graphicData>
      <texPath>Things/Rock/WeatheredClaystone</texPath>
      <color>(68,54,47)</color>
    </graphicData>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(68,54,47)</li>
      <li>(70,52,49)</li>
      <li>(66,52,47)</li>
      <li>(65,53,45)</li>
    </randomColorsOne>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsTwo>
      <li>(100,80,75)</li>
      <li>(110,85,79)</li>
      <li>(105,83,77)</li>
    </randomColorsTwo>
    <!-- If true, then the probability of each color is randomly chosen for each map, so each map has distinctive colors.   -->
    <seedRandomColorByMap>true</seedRandomColorByMap>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.7</min>
      <max>2.25</max>
    </visualSizeRange>
    <uiIconPath>Things/Rock/WeatheredClaystone/WeatheredClaystoneA</uiIconPath>
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>4</Beauty>
    </statBases>
    <building>
      <mineableThing>ZF_ChunkMudstone</mineableThing>
      <mineableDropChance>0.2</mineableDropChance>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1.5</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.007</minClusterProbability>
    <maxClusterProbability>0.015</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>80</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
		<allowedTerrains>
			<li>ZF_MudstoneBase_Rough</li>
			<li>AB_Mudstone_Rough</li>
			<li>AB_CrackedMud</li>
			<li>AB_RichCrackedMud</li>
			<li>AB_FineSand</li>
			<li>RockySoil</li>
			<li>Gravel</li>
			<li>Sand</li>
			<li>Soil</li>
			<li>SoilRich</li>
			<li>PoorSoil</li>
			<li>MarginalSoil</li>
      <li>SavannaSoil</li>
      <li>MarginalSoil</li>
			<li>Ice</li>
			<li>SaltField</li>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
			<li>ZF_MudstoneBase_Rough</li>
			<li>ZF_WeatheredMudstone</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>5</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.07</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>6</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Peat</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>15</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>Dirt</ResourceDefName>
        <DropProbability>0.5</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>SoftClay</ResourceDefName>
        <DropProbability>0.2</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>ZF_MudstoneBase</li>
    </ThingsToReplace>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>wall</li>
      <li>weathered</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.3</mineSpeedFactor>
  </ThingDef>
  
  
  <ThingDef Name="ZF_SolidMudstone" ParentName="SolidRockBase" Class="Minerals2.ThingDef_SolidRock">
    <defName>ZF_SolidMudstone</defName>
    <label>Solid Mudstone</label>
    <description>A solid wall of Mudstone, a fine-grained sedimentary rock formed from hardened mud.</description>
    <graphicData>
      <texPath>Things/Rock/WeatheredLimestone</texPath>
      <color>(68,54,47)</color>
    </graphicData>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(68,54,47)</li>
      <li>(70,52,49)</li>
      <li>(66,52,47)</li>
      <li>(65,53,45)</li>
    </randomColorsOne>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsTwo>
      <li>(100,80,75)</li>
      <li>(110,85,79)</li>
      <li>(105,83,77)</li>
    </randomColorsTwo>
    <uiIconPath>Things/Rock/WeatheredLimestone/WeatheredLimestoneA</uiIconPath>
    <statBases>
      <MaxHitPoints>700</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>0</Beauty>
    </statBases>
    <building>
      <mineableThing>ZF_ChunkMudstone</mineableThing>
      <mineableDropChance>0.3</mineableDropChance>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>5</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.01</minClusterProbability>
    <maxClusterProbability>0.01</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>3</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
		<allowedTerrains>
			<li>ZF_MudstoneBase_Rough</li>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>ZF_MudstoneBase_Rough</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
        <DropProbability>0.06</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
        <DropProbability>0.04</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.07</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>6</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Peat</ResourceDefName>
        <DropProbability>0.1</DropProbability>
        <CountPerDrop>15</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>Dirt</ResourceDefName>
        <DropProbability>0.6</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>SoftClay</ResourceDefName>
        <DropProbability>0.2</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>ZF_WeatheredMudstone</li>
      <li>ZF_HewnMudstone</li>
      <li>ZF_MudstoneBase</li>
    </ThingsToReplace>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>wall</li>
      <li>solid</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.3</mineSpeedFactor>
  </ThingDef>

  
  <ThingDef Name="ZF_HewnMudstone" ParentName="HewnRockBase" Class="Minerals2.ThingDef_StaticMineral">
    <defName>ZF_HewnMudstone</defName>
    <label>Hewn Mudstone</label>
    <description>A hewn wall of Mudstone, a fine-grained sedimentary rock formed from hardened mud.</description>
    <graphicData>
			<texPath>Things/Rock/HewnRockWall</texPath>
      <color>(68,54,47)</color>
    </graphicData>
    <uiIconPath>Things/Rock/HewnRockWall/HewnRockWallA</uiIconPath>
    <statBases>
      <MaxHitPoints>900</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>-1</Beauty>
    </statBases>
    <building>
      <mineableThing>ZF_ChunkMudstone</mineableThing>
      <mineableDropChance>0.4</mineableDropChance>
      <smoothedThing>ZF_SmoothedHewnMudstone</smoothedThing>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
			<li>ZF_MudstoneBase_Rough</li>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
			<li>ZF_MudstoneBase_Rough</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>1</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.7</min>
      <max>1.8</max>
    </visualSizeRange>
    <visualClustering>1.0</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>0.2</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
        <DropProbability>0.08</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.07</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>6</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Peat</ResourceDefName>
        <DropProbability>0.15</DropProbability>
        <CountPerDrop>15</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>Dirt</ResourceDefName>
        <DropProbability>0.7</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>SoftClay</ResourceDefName>
        <DropProbability>0.25</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>ZF_WeatheredMudstone</li>
      <li>ZF_MudstoneBase</li>
    </ThingsToReplace>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>wall</li>
      <li>hewn</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.1</mineSpeedFactor>
  </ThingDef>
  
  
  <ThingDef Name="ZF_SmoothedHewnMudstone" ParentName="HewnRockBase" Class="Minerals2.ThingDef_StaticMineral">
    <defName>ZF_SmoothedHewnMudstone</defName>
    <label>Smoothed Mudstone wall</label>
    <description>A smoothed wall of Mudstone, a fine-grained sedimentary rock formed from hardened mud.</description>
    <graphicData>
			<texPath>Things/Rock/SmoothedRockWall</texPath>
      <color>(68,54,47)</color>
    </graphicData>
    <uiIconPath>Things/Rock/SmoothedRockWall/SmoothedRockWallA</uiIconPath>
    <statBases>
      <MaxHitPoints>800</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>1</Beauty>
    </statBases>
    <building>
      <mineableThing>ZF_ChunkMudstone</mineableThing>
      <mineableDropChance>0.4</mineableDropChance>
    </building>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
        <DropProbability>0.08</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.07</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>6</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Peat</ResourceDefName>
        <DropProbability>0.15</DropProbability>
        <CountPerDrop>15</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>Dirt</ResourceDefName>
        <DropProbability>0.7</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>SoftClay</ResourceDefName>
        <DropProbability>0.2</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>wall</li>
      <li>hewn</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.1</mineSpeedFactor>
  </ThingDef>
  
  
  <ThingDef Name="ZF_BoulderMudstone" ParentName="BoulderRockBase" Class="Minerals2.ThingDef_StaticMineral">
    <defName>ZF_BoulderMudstone</defName>
    <label>Mudstone outcropping</label>
    <description>A Mudstone outcropping, sculpted by weather and time into flowing shapes.</description>
    <graphicData>
      <texPath>Things/Rock/PassableClaystone</texPath>
      <color>(68,54,47)</color>
    </graphicData>
    <altitudeLayer>Building</altitudeLayer>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(68,54,47)</li>
      <li>(70,52,49)</li>
      <li>(66,52,47)</li>
      <li>(65,53,45)</li>
    </randomColorsOne>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsTwo>
      <li>(100,80,75)</li>
      <li>(110,85,79)</li>
      <li>(105,83,77)</li>
    </randomColorsTwo>
    <!-- How much to change the vertical position of the texture. Positive is up -->
    <verticalOffset>0.1</verticalOffset>
    <uiIconPath>Things/Rock/PassableClaystone/PassableClaystoneA</uiIconPath>
    <fillPercent>0.5</fillPercent>
    <statBases>
      <MaxHitPoints>250</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>2</Beauty>
    </statBases>
    <pathCost>100</pathCost>
    <building>
      <mineableThing>ZF_ChunkMudstone</mineableThing>
      <mineableDropChance>0.2</mineableDropChance>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1.5</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1</perMapProbability>
    <!--For a given map, the minimum/maxwimum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.005</minClusterProbability>
    <maxClusterProbability>0.015</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.8</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
		<allowedTerrains>
			<li>ZF_MudstoneBase_Rough</li>
			<li>AB_Mudstone_Rough</li>
			<li>AB_CrackedMud</li>
			<li>AB_RichCrackedMud</li>
			<li>AB_FineSand</li>
			<li>RockySoil</li>
			<li>Gravel</li>
			<li>Sand</li>
			<li>Soil</li>
			<li>SoilRich</li>
			<li>PoorSoil</li>
			<li>MarginalSoil</li>
      <li>SavannaSoil</li>
      <li>MarginalSoil</li>
			<li>Ice</li>
			<li>SaltField</li>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
			<li>ZF_MudstoneBase_Rough</li>
      <li>ZF_WeatheredMudstone</li>
      <li>ZF_BoulderMudstone</li>
      <li>ZF_SolidMudstone</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>1.5</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>ZF_BoulderMudstone</li>
      <li>ZF_WeatheredMudstone</li>
      <li>ZF_SolidMudstone</li>
    </associatedOres>
    <nearAssociatedOreBonus>5</nearAssociatedOreBonus>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>true</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>2</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.7</min>
      <max>1.2</max>
    </visualSizeRange>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualClustering>0.4</visualClustering>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSpread>1.2</visualSpread>
    <visualSizeVariation>0.25</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
        <DropProbability>0.01</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.04</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>6</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Dirt</ResourceDefName>
        <DropProbability>0.5</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>SoftClay</ResourceDefName>
        <DropProbability>0.2</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>ZF_ChunkMudstone</li>
    </ThingsToReplace>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>boulder</li>
      <li>chunk_replacer</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.2</mineSpeedFactor>
  </ThingDef>
  
  
  <ThingDef Name="ZF_PassableMudstone" ParentName="SmallRockBase" Class="Minerals2.ThingDef_StaticMineral">
    <defName>ZF_PassableMudstone</defName>
    <label>Mudstone debris</label>
    <description>Mudstone debris</description>
    <graphicData>
      <texPath>Things/Rock/SandPile</texPath>
      <color>(68,54,47)</color>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <hideAtSnowOrSandDepth>0.7</hideAtSnowOrSandDepth>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(68,54,47)</li>
      <li>(68,54,47)</li>
      <li>(68,54,47)</li>
      <li>(68,54,47)</li>
    </randomColorsOne>
    <uiIconPath>Things/Rock/SandPile/SandPileA</uiIconPath>
    <fillPercent>0.3</fillPercent>
    <statBases>
      <MaxHitPoints>600</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>0</Beauty>
    </statBases>
    <building>
      <mineableThing>ZF_ChunkMudstone</mineableThing>
      <mineableDropChance>0.05</mineableDropChance>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.6</minClusterProbability>
    <maxClusterProbability>0.8</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>1</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.8</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.1</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
		<allowedTerrains>
			<li>ZF_MudstoneBase_Rough</li>
			<li>AB_Mudstone_Rough</li>
			<li>AB_CrackedMud</li>
			<li>AB_RichCrackedMud</li>
			<li>AB_FineSand</li>
			<li>RockySoil</li>
			<li>Gravel</li>
			<li>Sand</li>
			<li>Soil</li>
			<li>SoilRich</li>
			<li>PoorSoil</li>
			<li>MarginalSoil</li>
      <li>SavannaSoil</li>
      <li>MarginalSoil</li>
			<li>Ice</li>
			<li>SaltField</li>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>ZF_WeatheredMudstone</li>
      <li>ZF_SolidMudstone</li>
			<li>ZF_HewnMudstone</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>1.1</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>ZF_WeatheredMudstone</li>
    </associatedOres>
    <nearAssociatedOreBonus>2</nearAssociatedOreBonus>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>1</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>2.2</min>
      <max>2.5</max>
    </visualSizeRange>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualClustering>1.0</visualClustering>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSpread>0.8</visualSpread>
    <visualSizeVariation>0.1</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.04</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>6</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Dirt</ResourceDefName>
        <DropProbability>0.7</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>SoftClay</ResourceDefName>
        <DropProbability>0.5</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
    </randomlyDropResources>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.6</mineSpeedFactor>
  </ThingDef>

</Defs>