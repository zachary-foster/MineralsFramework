<?xml version="1.0" encoding="UTF-8"?>
<Defs>
  
  <ThingDef Name="MF_StaticMineralBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <thingClass>MineralsFramework.StaticMineral</thingClass>
    <category>Building</category>
    <selectable>true</selectable>
    <neverMultiSelect>true</neverMultiSelect>
    <altitudeLayer>LowPlant</altitudeLayer>
    <passability>Standable</passability>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.05</fillPercent>
    <coversFloor>false</coversFloor>
    <pathCost>60</pathCost>
    <mineable>true</mineable>
    <leaveResourcesWhenKilled>true</leaveResourcesWhenKilled>
    <filthLeaving>Filth_RubbleRock</filthLeaving>
    <drawerType>MapMeshOnly</drawerType>
    <scatterableOnMapGen>false</scatterableOnMapGen>
    <hideAtSnowOrSandDepth>0.5</hideAtSnowOrSandDepth>
    <topVerticesAltitudeBias>0.01</topVerticesAltitudeBias>
    <!--How far away it can spawn from an existing location-->
    <!-- Even for static minerals, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>2</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.5</perMapProbability>
    <!-- For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.001</minClusterProbability>
    <maxClusterProbability>0.01</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.3</initialSizeMin>
    <initialSizeMax>.9</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The biomes this can appear in. If empty, all biomes are allowed -->
    <allowedBiomes>
    </allowedBiomes>
    <!-- The terrains this can appear on. IF empty, all terrains are allowed -->
    <allowedTerrains>
    </allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on. If empty, it does not need to be near any -->
    <neededNearbyTerrains>
		</neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Roof requirements -->
    <mustBeUnderRoof>true</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>4</maxMeshCount>
    <!-- The size range of images printed -->
    <visualSizeRange>
      <min>0.3</min>
      <max>1.0</max>
    </visualSizeRange>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualClustering>0.5</visualClustering>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSpread>1.5</visualSpread>
    <!-- 0 = all images in cluster are same size -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- Can spawn on items, pawns, and plants-->
    <canSpawnOnThings>false</canSpawnOnThings>
    <!-- If the primary color is based on the stone below it -->
    <coloredByTerrain>false</coloredByTerrain>
    <building>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>RoughGem</mineableThing>
      <mineableDropChance>0</mineableDropChance>
      <mineableYield>0</mineableYield>
      <mineableNonMinedEfficiency>0</mineableNonMinedEfficiency>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
      <isEdifice>true</isEdifice>
      <destroyShakeAmount>0</destroyShakeAmount>
    </building>
    <!-- What stage of map generation the thing is spawned during (chunks or plants) -->
    <newMapGenStep>chunks</newMapGenStep>
    <!-- Tags which determine how some options behave  -->
    <tags>
    </tags>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>0</otherSettlementMiningRadius>
    <!--  If the mean size of minerals spawned at map generation is scaled by the relative abundance in that map -->
    <sizeScaledByAbundance>false</sizeScaledByAbundance>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1</mineSpeedFactor>
  </ThingDef>
  
  <ThingDef Name="MF_DynamicMineralBase" Parent="MF_StaticMineralBase" Class="MineralsFramework.ThingDef_DynamicMineral" Abstract="True">
    <thingClass>MineralsFramework.DynamicMineral</thingClass>
    <category>Building</category>
    <selectable>true</selectable>
    <altitudeLayer>LowPlant</altitudeLayer>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.05</fillPercent>
    <coversFloor>false</coversFloor>
    <pathCost>60</pathCost>
    <mineable>true</mineable>
    <leaveResourcesWhenKilled>true</leaveResourcesWhenKilled>
    <filthLeaving>Filth_RubbleRock</filthLeaving>
    <drawerType>MapMeshOnly</drawerType>
    <tickerType>Long</tickerType>
    <growDays>100</growDays>
    <minReproductionSize>0.8</minReproductionSize>
    <reproduceProp>0.001</reproduceProp>
    <deathProb>0.001</deathProb>
    <!-- The minimum number of crystals in clusters that are spawned during gameplay, not map creation -->
    <minSpawnClusterSize>1</minSpawnClusterSize>
    <!-- The maximum number of crystals in clusters that are spawned during gameplay, not map creation -->
    <maxSpawnClusterSize>1</maxSpawnClusterSize>
    <!-- Chance of spawning de novo each tick -->
    <spawnProb>0.0001</spawnProb>
    <building>
      <isInert>false</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>Filth_RubbleRock</mineableThing>
      <mineableYield>1</mineableYield>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
      <destroyShakeAmount>0</destroyShakeAmount>
    </building>
    <!-- If true, the graphics are regenerated more often -->
    <fastGraphicRefresh>false</fastGraphicRefresh>
  </ThingDef>

  <ThingDef Name="BigMineralBase" ParentName="StaticMineralBase" Class="MineralsFramework.ThingDef_BigMineral" Abstract="True">
    <thingClass>MineralsFramework.BigMineral</thingClass>
    <passability>PassThroughOnly</passability>
    <fillPercent>0.7</fillPercent>
    <pathCost>200</pathCost>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1.0</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>1</minClusterProbability>
    <maxClusterProbability>1</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>1</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>0.95</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>0.1</initialSizeVariation>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <mustBeNotUnderThickRoof>false</mustBeNotUnderThickRoof>
    <mustBeNearPassable>false</mustBeNearPassable>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>1</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.2</min>
      <max>1.7</max>
    </visualSizeRange>
    <visualClustering>1</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>0.5</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0</visualSizeVariation>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
      <li>big_mineral</li>
      <li>fictional</li>
    </tags>
    <!-- If graphic overlapping with nearby wall textures are rotated -->
    <growsUpWalls>false</growsUpWalls>
    <!-- The radius that will be searched to replace things -->
    <replaceRadius>1</replaceRadius>
    <!-- The minmum propotion of things in radius to replace for a replacement to happen -->
    <repalceThreshold>0.4</repalceThreshold>
    <!-- If it replaces everything -->
    <replaceAll>false</replaceAll>
    <!-- If it must replace something in order to spawned -->
    <mustReplace>true</mustReplace>
    <hideAtSnowOrSandDepth>2</hideAtSnowOrSandDepth>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>0.3</mineSpeedFactor>
  </ThingDef>
  
  <ThingDef Name="BigMineralTrophyBase" ParentName="BuildingBase" Class="MineralsFramework.ThingDef_BigMineralTrophy" Abstract="True">
    <thingClass>MineralsFramework.BigMineralTrophy</thingClass>
    <category>Building</category>
    <minifiedDef>MinifiedThing</minifiedDef>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <selectable>true</selectable>
    <fillPercent>0.50</fillPercent>
    <pathCost>100</pathCost>
    <leaveResourcesWhenKilled>false</leaveResourcesWhenKilled>
    <soundImpactDefault>MeleeHit_Stone</soundImpactDefault>
    <rotatable>false</rotatable>
    <tradeTags>
       <li>MineralTrophy</li>
    </tradeTags>
    <thingCategories>
      <li>BuildingsSpecial</li>
    </thingCategories>
  </ThingDef>

</Defs>
