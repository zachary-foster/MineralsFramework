<?xml version="1.0" encoding="UTF-8"?>
<Defs>


  <ThingDef Name="MF_SolidVacstoneBase" ParentName="MF_SolidRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/WeatheredBasalt</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/WeatheredBasalt/WeatheredBasaltA</uiIconPath>
    <statBases>
      <Beauty>-1</Beauty>
      <MaxHitPoints>1600</MaxHitPoints>
    </statBases>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>1</minClusterProbability>
    <maxClusterProbability>1</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>1</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>MS_RoughGem</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <MinMiningSkill>6</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>1</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <WasteProduct>true</WasteProduct>
      </li>
      <li>
        <ResourceDefName>Steel</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
      </li>
    </randomlyDropResources>
  </ThingDef>


  <ThingDef Name="MF_HewnVacstoneBase" ParentName="MF_HewnRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/HewnRockWall</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/HewnRockWall/HewnRockWallA</uiIconPath>
    <statBases>
      <MaxHitPoints>1700</MaxHitPoints>
      <Beauty>-1</Beauty>
    </statBases>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>MS_RoughGem</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <MinMiningSkill>6</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>1</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <WasteProduct>true</WasteProduct>
      </li>
      <li>
        <ResourceDefName>Steel</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
      </li>
    </randomlyDropResources>
  </ThingDef>


  <ThingDef Name="MF_SmoothedVacstoneBase" ParentName="MF_HewnVacstoneBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/SmoothedRockWall</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/SmoothedRockWall/SmoothedRockWallA</uiIconPath>
    <statBases>
      <Beauty>1</Beauty>
    </statBases>
  </ThingDef>


  <ThingDef Name="MF_BoulderVacstoneBase" ParentName="MF_BoulderRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/PassableBasalt</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/PassableBasalt/PassableBasaltA</uiIconPath>
    <statBases>
      <MaxHitPoints>1000</MaxHitPoints>
      <Beauty>-1</Beauty>
    </statBases>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>2</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1.0</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.1</minClusterProbability>
    <maxClusterProbability>0.4</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>1</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>0.5</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>2</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <nearAssociatedOreBonus>5</nearAssociatedOreBonus>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>1</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.0</min>
      <max>1.3</max>
    </visualSizeRange>
    <visualClustering>0.6</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.0</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.1</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>MS_RoughGem</ResourceDefName>
        <DropProbability>0.02</DropProbability>
        <MinMiningSkill>6</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>1</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <WasteProduct>true</WasteProduct>
      </li>
      <li>
        <ResourceDefName>MAU_SharpStoneShard</ResourceDefName>
        <DropProbability>0.1</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>Steel</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>10</CountPerDrop>
      </li>
    </randomlyDropResources>
  </ThingDef>


  <ThingDef Name="MF_SmallVacstoneBase" ParentName="MF_SmallRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/PassableBasalt</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/PassableBasalt/PassableBasaltA</uiIconPath>
    <statBases>
      <MaxHitPoints>900</MaxHitPoints>
      <Beauty>-1</Beauty>
    </statBases>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1.5</spawnRadius>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.1</minClusterProbability>
    <maxClusterProbability>0.3</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>1</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>0.5</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>2</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <nearAssociatedOreBonus>3</nearAssociatedOreBonus>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>5</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.3</min>
      <max>0.95</max>
    </visualSizeRange>
    <visualClustering>0.2</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.2</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.3</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>MS_RoughGem</ResourceDefName>
        <DropProbability>0.02</DropProbability>
        <MinMiningSkill>6</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>1</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <WasteProduct>true</WasteProduct>
      </li>
      <li>
        <ResourceDefName>Steel</ResourceDefName>
        <DropProbability>0.02</DropProbability>
        <CountPerDrop>10</CountPerDrop>
      </li>
    </randomlyDropResources>
  </ThingDef>


</Defs>
