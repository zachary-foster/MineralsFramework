<?xml version="1.0" encoding="UTF-8"?>
<Defs>

  <ThingDef Name="MF_WeatheredClaystoneBase" ParentName="MF_WeatheredRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/WeatheredClaystone</texPath>
    </graphicData>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.9</min>
      <max>2.2</max>
    </visualSizeRange>
    <uiIconPath>Things/Rock/WeatheredClaystone/WeatheredClaystoneA</uiIconPath>
    <statBases>
      <MaxHitPoints>600</MaxHitPoints>
      <Beauty>4</Beauty>
    </statBases>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>2</spawnRadius>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.04</minClusterProbability>
    <maxClusterProbability>0.08</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>20</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>2</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SoftClay</ResourceDefName>
        <DropProbability>0.3</DropProbability>
        <CountPerDrop>15</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>7</MinMiningSkill>
      </li>
    </randomlyDropResources>
  </ThingDef>
  
  
  <ThingDef Name="MF_SolidClaystoneBase" ParentName="MF_SolidRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/WeatheredLimestone</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/WeatheredLimestone/WeatheredLimestoneA</uiIconPath>
    <statBases>
      <MaxHitPoints>800</MaxHitPoints>
      <Beauty>1</Beauty>
    </statBases>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SoftClay</ResourceDefName>
        <DropProbability>0.3</DropProbability>
        <CountPerDrop>15</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
        <DropProbability>0.06</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
        <DropProbability>0.04</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>7</MinMiningSkill>
      </li>
    </randomlyDropResources>
  </ThingDef>

  
  <ThingDef Name="MF_HewnClaystoneBase" ParentName="MF_HewnRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
			<texPath>Things/Rock/HewnRockWall</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/HewnRockWall/HewnRockWallA</uiIconPath>
    <statBases>
      <MaxHitPoints>1000</MaxHitPoints>
      <Beauty>1</Beauty>
    </statBases>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SoftClay</ResourceDefName>
        <DropProbability>0.3</DropProbability>
        <CountPerDrop>15</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
        <DropProbability>0.07</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>7</MinMiningSkill>
      </li>
    </randomlyDropResources>
  </ThingDef>
  
  
  <ThingDef Name="MF_SmoothedClaystoneBase" ParentName="MF_HewnRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
			<texPath>Things/Rock/SmoothedRockWall</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/SmoothedRockWall/SmoothedRockWallA</uiIconPath>
    <statBases>
      <MaxHitPoints>900</MaxHitPoints>
      <Beauty>2</Beauty>
    </statBases>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SoftClay</ResourceDefName>
        <DropProbability>0.3</DropProbability>
        <CountPerDrop>15</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
        <DropProbability>0.07</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>7</MinMiningSkill>
      </li>
    </randomlyDropResources>
  </ThingDef>
  
  
  <ThingDef Name="MF_BoulderClaystoneBase" ParentName="MF_BoulderRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/PassableClaystone</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/PassableClaystone/PassableClaystoneA</uiIconPath>
    <fillPercent>0.5</fillPercent>
    <statBases>
      <MaxHitPoints>300</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>4</Beauty>
    </statBases>
    <pathCost>100</pathCost>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>2</spawnRadius>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.035</minClusterProbability>
    <maxClusterProbability>0.035</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>3</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.8</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>1.5</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <nearAssociatedOreBonus>5</nearAssociatedOreBonus>
    <!-- Roof requirements -->
    <mustBeUnroofed>true</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>2</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.7</min>
      <max>1.2</max>
    </visualSizeRange>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualClustering>0.4</visualClustering>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSpread>1.2</visualSpread>
    <visualSizeVariation>0.25</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SoftClay</ResourceDefName>
        <DropProbability>0.3</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
        <DropProbability>0.01</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>7</MinMiningSkill>
      </li>
    </randomlyDropResources>
  </ThingDef>
  
  
  <ThingDef Name="MF_SmallClaystoneBase" ParentName="MF_SmallRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/SandPile</texPath>
    </graphicData>
    <hideAtSnowOrSandDepth>0.7</hideAtSnowOrSandDepth>
    <uiIconPath>Things/Rock/SandPile/SandPileA</uiIconPath>
    <fillPercent>0.2</fillPercent>
    <statBases>
      <MaxHitPoints>400</MaxHitPoints>
      <Beauty>1</Beauty>
    </statBases>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.35</minClusterProbability>
    <maxClusterProbability>0.55</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>1</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.8</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.1</initialSizeVariation>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>1.1</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <nearAssociatedOreBonus>5</nearAssociatedOreBonus>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>1</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>2.2</min>
      <max>2.5</max>
    </visualSizeRange>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualClustering>1.0</visualClustering>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSpread>0.8</visualSpread>
    <visualSizeVariation>0.1</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SoftClay</ResourceDefName>
        <DropProbability>0.3</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>7</MinMiningSkill>
      </li>
    </randomlyDropResources>
  </ThingDef>


</Defs>
