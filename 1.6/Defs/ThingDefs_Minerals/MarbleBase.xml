<?xml version="1.0" encoding="UTF-8"?>
<Defs>


  <ThingDef Name="MF_WeatheredMarbleBase" ParentName="MF_WeatheredRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/WeatheredMarble</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/WeatheredMarble/WeatheredMarbleA</uiIconPath>
    <statBases>
      <MaxHitPoints>1300</MaxHitPoints>
      <Beauty>2</Beauty>
    </statBases>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.01</minClusterProbability>
    <maxClusterProbability>0.02</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>5</maxClusterSize>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>1</neededNearbyTerrainRadius>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>MS_RoughGem</ResourceDefName>
        <DropProbability>0.04</DropProbability>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>2</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <WasteProduct>true</WasteProduct>
      </li>
      <li>
        <ResourceDefName>Jade</ResourceDefName>
        <DropProbability>0.015</DropProbability>
        <CountPerDrop>15</CountPerDrop>
      </li>
    </randomlyDropResources>
  </ThingDef>


  <ThingDef Name="MF_SolidMarbleBase" ParentName="MF_SolidRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/SolidMarble</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/SolidMarble/SolidMarbleA</uiIconPath>
    <statBases>
      <MaxHitPoints>1500</MaxHitPoints>
      <Beauty>1</Beauty>
    </statBases>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>MS_RoughGem</ResourceDefName>
        <DropProbability>0.04</DropProbability>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>2</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <WasteProduct>true</WasteProduct>
      </li>
      <li>
        <ResourceDefName>MAU_ChunkAlabaster</ResourceDefName>
        <DropProbability>0.015</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>5</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Jade</ResourceDefName>
        <DropProbability>0.02</DropProbability>
        <CountPerDrop>15</CountPerDrop>
      </li>
    </randomlyDropResources>
  </ThingDef>


  <ThingDef Name="MF_HewnMarbleBase" ParentName="MF_HewnRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/HewnMarble</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/HewnMarble/HewnMarbleA</uiIconPath>
    <statBases>
      <MaxHitPoints>1600</MaxHitPoints>
      <Beauty>0</Beauty>
    </statBases>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>MS_RoughGem</ResourceDefName>
        <DropProbability>0.04</DropProbability>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>2</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <WasteProduct>true</WasteProduct>
      </li>
      <li>
        <ResourceDefName>MAU_ChunkAlabaster</ResourceDefName>
        <DropProbability>0.02</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>5</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Jade</ResourceDefName>
        <DropProbability>0.025</DropProbability>
        <CountPerDrop>15</CountPerDrop>
      </li>
    </randomlyDropResources>
  </ThingDef>


  <ThingDef Name="MF_SmoothedMarbleBase" ParentName="MR_HewnMarbleBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/SmoothedMarble</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/SmoothedMarble/SmoothedMarbleA</uiIconPath>
    <statBases>
      <Beauty>4</Beauty>
    </statBases>
  </ThingDef>


  <ThingDef Name="MF_BoulderMarbleBase" ParentName="MF_BoulderRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/BoulderMarble</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/BoulderMarble/BoulderMarbleA</uiIconPath>
    <fillPercent>0.6</fillPercent>
    <statBases>
      <MaxHitPoints>800</MaxHitPoints>
      <Beauty>2</Beauty>
    </statBases>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.005</minClusterProbability>
    <maxClusterProbability>0.01</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>2</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.7</initialSizeMin>
    <initialSizeMax>.9</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>10</neededNearbyTerrainRadius>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <nearAssociatedOreBonus>20</nearAssociatedOreBonus>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.1</min>
      <max>1.3</max>
    </visualSizeRange>
    <visualClustering>1.0</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>0.8</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.1</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>MS_RoughGem</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>1</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <WasteProduct>true</WasteProduct>
      </li>
      <li>
        <ResourceDefName>Jade</ResourceDefName>
        <DropProbability>0.01</DropProbability>
        <CountPerDrop>15</CountPerDrop>
      </li>
    </randomlyDropResources>
  </ThingDef>


  <ThingDef Name="MF_SmallMarbleBase" ParentName="MF_SmallRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/PassableMarble</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/PassableMarble/PassableMarbleA</uiIconPath>
    <statBases>
      <MaxHitPoints>600</MaxHitPoints>
      <Beauty>1</Beauty>
    </statBases>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.02</minClusterProbability>
    <maxClusterProbability>0.03</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>4</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>0.5</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>4</neededNearbyTerrainRadius>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <nearAssociatedOreBonus>5</nearAssociatedOreBonus>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>2</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.5</min>
      <max>0.7</max>
    </visualSizeRange>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualClustering>0.3</visualClustering>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSpread>1.2</visualSpread>
    <visualSizeVariation>0.3</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>MS_RoughGem</ResourceDefName>
        <DropProbability>0.02</DropProbability>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>1</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <WasteProduct>true</WasteProduct>
      </li>
      <li>
        <ResourceDefName>Jade</ResourceDefName>
        <DropProbability>0.005</DropProbability>
        <CountPerDrop>15</CountPerDrop>
      </li>
    </randomlyDropResources>
  </ThingDef>


</Defs>
