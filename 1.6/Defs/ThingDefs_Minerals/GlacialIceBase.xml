<?xml version="1.0" encoding="UTF-8"?>
<Defs>


  <ThingDef Name="MF_WeatheredGlacialIceBase" ParentName="MF_WeatheredRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/WeatheredClaystone</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/WeatheredClaystone/WeatheredClaystoneA</uiIconPath>
    <statBases>
      <MaxHitPoints>300</MaxHitPoints>
      <Beauty>4</Beauty>
    </statBases>
    <filthLeaving>Filth_ChippedIce</filthLeaving>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.9</min>
      <max>2.2</max>
    </visualSizeRange>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.04</minClusterProbability>
    <maxClusterProbability>0.08</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>30</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>2</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
    </randomlyDropResources>
    <!-- What stage of map generation the thing is spawned during (rocks or ice) -->
    <newMapGenStep>ice</newMapGenStep>
  </ThingDef>


  <ThingDef Name="MF_SolidGlacialIceBase" ParentName="MF_SolidRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/WeatheredLimestone</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/WeatheredLimestone/WeatheredLimestoneA</uiIconPath>
    <statBases>
      <MaxHitPoints>400</MaxHitPoints>
      <Beauty>2</Beauty>
    </statBases>
    <filthLeaving>Filth_ChippedIce</filthLeaving>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
    </randomlyDropResources>
    <!-- What stage of map generation the thing is spawned during (rocks or ice) -->
    <newMapGenStep>ice</newMapGenStep>
  </ThingDef>


  <ThingDef Name="MF_HewnGlacialIceBase" ParentName="MF_HewnRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/HewnRockWall</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/HewnRockWall/HewnRockWallA</uiIconPath>
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Beauty>1</Beauty>
    </statBases>
    <filthLeaving>Filth_ChippedIce</filthLeaving>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>SolidIce</li>
    </ThingsToReplace>
    <!-- What stage of map generation the thing is spawned during (rocks or ice) -->
    <newMapGenStep>ice</newMapGenStep>
  </ThingDef>


  <ThingDef Name="MF_SmoothedGlacialIceBase" ParentName="MF_HewnGlacialIceBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/SmoothedRockWall</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/SmoothedRockWall/SmoothedRockWallA</uiIconPath>
    <statBases>
      <Beauty>4</Beauty>
    </statBases>
  </ThingDef>


  <ThingDef Name="MF_BoulderGlacialIceBase" ParentName="MF_BoulderRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/PassableClaystone</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/PassableClaystone/PassableClaystoneA</uiIconPath>
    <fillPercent>0.5</fillPercent>
    <statBases>
      <MaxHitPoints>100</MaxHitPoints>
      <Beauty>2</Beauty>
    </statBases>
    <pathCost>100</pathCost>
    <filthLeaving>Filth_ChippedIce</filthLeaving>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.05</minClusterProbability>
    <maxClusterProbability>0.08</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>3</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.8</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>1.5</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <nearAssociatedOreBonus>5</nearAssociatedOreBonus>
    <!-- Roof requirements -->
    <mustBeUnroofed>true</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>2</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.8</min>
      <max>1.3</max>
    </visualSizeRange>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualClustering>0.3</visualClustering>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSpread>1.2</visualSpread>
    <visualSizeVariation>0.25</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
    </randomlyDropResources>
    <!-- What stage of map generation the thing is spawned during (rocks or ice) -->
    <newMapGenStep>ice</newMapGenStep>
    <!-- at what snow depth the mineral is completely hidden -->
    <hiddenInSnowThreshold>999</hiddenInSnowThreshold>
  </ThingDef>


  <ThingDef Name="MF_UndergroundSmallGlacialIceBase" ParentName="MF_SmallRockBase" Class="MineralsFramework.ThingDef_StaticMineral" Abstract="True">
    <graphicData>
      <texPath>Things/Rock/PassableBasalt</texPath>
    </graphicData>
    <uiIconPath>Things/Rock/PassableBasalt/PassableBasaltA</uiIconPath>
    <statBases>
      <MaxHitPoints>50</MaxHitPoints>
      <Beauty>1</Beauty>
    </statBases>
    <filthLeaving>Filth_ChippedIce</filthLeaving>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>2</spawnRadius>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.04</minClusterProbability>
    <maxClusterProbability>0.06</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>4</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.3</initialSizeMin>
    <initialSizeMax>.9</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>4</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <nearAssociatedOreBonus>5</nearAssociatedOreBonus>
    <!-- Roof requirements -->
    <mustBeUnderRoof>true</mustBeUnderRoof>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>4</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.2</min>
      <max>0.6</max>
    </visualSizeRange>
    <visualClustering>0.4</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.9</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.4</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
    </randomlyDropResources>
    <!-- What stage of map generation the thing is spawned during (rocks or ice) -->
    <newMapGenStep>ice</newMapGenStep>
  </ThingDef>


</Defs>
